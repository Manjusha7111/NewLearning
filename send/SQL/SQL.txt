insert into `BITest.dealer` values('AlfaRomeo','Spider',1,69800,'Silver',11517	),('Fiat','Coupe',2,6233,	'Blue',	1157	),
('Citroen','Pluriel',3,1467,'Silver',12017),
('Citroen','Pluriel',4,6933,'Silver',13517),
('Skoda','Favorit',5,1000,'Red'	,145017),	
('Skoda','Octavia',6,	6667,	'Silver',142017	),
('Citroen','Saxo',7,6000,'Blue'	,142017),
('Opel','Corsa',8,6467,'Red',148017),
('Citroen','Pluriel',9,1467,'Silver',1563017);



create table BITest.dealer
(
  Brand string,
  Model string,
  dealer_number integer,
  price integer,
  colour string,
  stock integer,
 

)
OPTIONS(
  
  description="MY TABLE"  
);

-----------------------------------------

create table BITest.vechile
(
  Brand string,
  Model string,
  dealer_number integer,
  reg_no integer,
  year  integer ,
  id  integer

)
OPTIONS(
  
  description="MY TABLE"
);



insert into `BITest.vechile` values('AlfaRomeo','Spider',1,7426,1967,101),
('Fiat','Coupe',2,6233,1977,102	),
('Citroen','Pluriel',3,1467,1989,103),
('Citroen','Pluriel',4,6633,1985,104),
('Skoda','Favorit',5,1000,1980,106),	
('Skoda','Octavia',6,	6667,	1999,108),
('Citroen','Saxo',7,6000,1972,107),
('Opel','Corsa',8,6467,1996,105),
('Citroen','Pluriel',9,1464,1983,109);

-----------------------------------------------------

SELECT
 *
FROM
  `BITest.vechile1` as v
INNER JOIN
  `BITest.dealer` as d
ON
 v.dealer_number=d.dealer_number;    

-------------------------------






______________________________________

*ALTER TABLE `BITest.cars` ADD PRIMARY KEY (Capid) NOT ENFORCED;------adding constraint
*ALTER TABLE `BITest.Country`
RENAME COLUMN  name TO  Country_code-------changing col name
*UPDATE `BITest.Country` SET id=101 WHERE Country_code='TX';----update

#adding col to existing table
ALTER TABLE `bfsi-ai-data-usecase-98uh7.BITest1.NEW1` ADD COLUMN Email INTEGER ;
____________________________________________________
create table BITest.country
(
  Currency_code string,
  Country_code string,
  id integer,
  

)
OPTIONS(
  
  description="MY TABLE"
);
 
__________________________________________________

insert into `BITest.Country` values('ANDORRA','AND336',103,'XCD'),
('ANGUILLA','ANGUI336',104,'EUR'),
('ARGENTINA','ARGE4',105,'ARS'),
('AUSTRALIA','AUS463',106,'AUD'),
('BELGIUM','BELGI336',107,'EUR'),	
('BHUTAN','BHUTA62',108,'INR'),
('ERITREA','ERI265',112,'ERN'),
('FRANCE','FRAN27627',113,'EUR'),
('GEORGIA','GEOR26',114,'GEL'),
('COLOMBIA','COLO5536',110,'COU'),
('HAITI	','HA2622',115,'USD'),
('INDIA','IND27233',116,'COU'),
('COLOMBIA','COLO5536',110,'INR'),
('DENMARK','DENM252',111,'DKK'),
('IRELAND','IRELAN723',117,'EUR'),
('JAPAN','JAPA522',118,'JPY'),
('KUWAIT','KUWA262',119,'KWD'),
('LIBYA','LIB622',120,'LYD'),
('MALAYSIA','MALAY32',121,'MYR'),
('MAURITIUS','MAU3767',122,'MUR'),
('MEXICO','MEXI37',123,'MXN'),
('NEPAL','NEP323',124,'NPR'),
('NIGERIA','NIGE333',125,'NGN'),
('PALAU','PALA76',126,'USD'),
('ROMANIA','ROMA334',127,'RON'),
('SERBIA','SERB344',128,'RSD'),
('THAILAND','THAI3332',129,'THB'),
('ROMANIA','ROM1213',130,'UZS');
--------------------------------------------------------------------
2 tables join:

SELECT
 *
FROM
  `bfsi-ai-data-usecase-98uh7.BITest.vechile` as vech
INNER JOIN
  `bfsi-ai-data-usecase-98uh7.BITest.Country` as cou
ON
  vech.id=cou.id;

_____________________________________________________________
2 tables join:
SELECT
 v.Brand,
 v.Model,
 c.Country_code
FROM
  `bfsi-ai-data-usecase-98uh7.BITest.vechile` as v
INNER JOIN
  `bfsi-ai-data-usecase-98uh7.BITest.Country` as c
ON
  v.id=c.id;

----------------------------------------------------
3 tables join:
SELECT
 v.Brand,
 v.Model,
 c.Country_code,
 c.id,
 v.id
FROM
  `bfsi-ai-data-usecase-98uh7.BITest.vechile` as v
INNER JOIN

  `bfsi-ai-data-usecase-98uh7.BITest.Country` as c
ON
v.id=c.id
INNER JOIN

  `bfsi-ai-data-usecase-98uh7.BITest.cars` as ca
ON

  v.id=ca.Capid;



------------------------
primary key:
create table BITest.vech2
(
  id integer NOT NULL primary key NOT ENFORCED,
  Brand string,
  Model string,
  dealer_number integer,
  reg_no integer,
  year  integer 
 

)
OPTIONS(
  
  description="MY TABLE"
);
_______________________________________________________
foreign key:
create table BITest.customer
(
  Cust_id integer NOT NULL  ,
  Cust_name string NOT NULL,
  dealer_number integer  NOT NULL,
PRIMARY KEY(Cust_id)NOT ENFORCED
);
------
create table BITest.sales
(
 Sales_id integer NOT NULL  ,
 Cust_id integer NOT NULL  ,


FOREIGN KEY(Cust_id) REFERENCES BITest.customer(Cust_id) NOT ENFORCED
);
-----
insert into `BITest.customer` values(1,'A',101),
(2,'B',102),(3,'C',103);

insert into `qwiklabs-gcp-04-343c501b68a0.n.customer` values(1,'A',101),
(2,'B',102),(3,'C',103);
-----
insert into `BITest.sales` values(101,1),
(102,2),(103,3),(1,104),(8,108);
----
SELECT
 *
FROM
  `bfsi-ai-data-usecase-98uh7.BITest.customer` as c
INNER JOIN
  `bfsi-ai-data-usecase-98uh7.BITest.sales` as s
ON
  c.Cust_id=s.Cust_id;
------------------------------------------------------------------------
partition on  ingestion time,date feild,integer feild

______________________________________________________________
create table cust
(
  Cust_id int PRIMARY KEY NOT NULL  ,
  Cust_name char NOT NULL,
  dealer_number int  
);

_____________________________________________________________

Cloud SQl
gcloud sql connect demo-cdc-test --user=btest

use inttest;

show databases;


create table sale
(
Cust_id int NOT NULL   ,
 Sales_id int NOT NULL ,
FOREIGN KEY(Cust_id) REFERENCES cust(Cust_id) 
 
);


insert into cust values(1,'A',101),
(2,'B',102),(3,'C',103);

insert into sale  values(101,1),
(102,2),(103,3);

_____________________________________________________________________________

*****************************************************************************

CREATE TABLE `bfsi-ai-data-usecase-98uh7.BITest.Partition` 
  (
    my_date DATE
  ) 
  PARTITION BY
    my_date
  OPTIONS (
    partition_expiration_days = 90,
    require_partition_filter = TRUE);


__________________________________________________________________

CREATE TABLE `bfsi-ai-data-usecase-98uh7.BITest.Partition-1` 
  (
    my_date DATE
  ) 
  PARTITION BY
    DATE_TRUNC(my_date, MONTH)
  OPTIONS (
    partition_expiration_days = 90,
    require_partition_filter = TRUE)




CREATE table `bfsi-ai-data-usecase-98uh7.BITest.naexample`
(

  id int64,
  name STRING,
  count INT64,
  date DATE
)
AS (
  SELECT 
    id int64,
  name STRING,
  count INT64,
  date DATE
FROM `bfsi-ai-data-usecase-98uh7.BITest.namesss`
WHERE date = "2023-04-23" 
);

______________________________________________________________



partition:
_________

CREATE table `bfsi-ai-data-usecase-98uh7.BITest.na-1-partition`
(
  id int64,
  name STRING,
  count INT64,
  date DATE
)
 PARTITION BY
    date
  OPTIONS (
    partition_expiration_days = 2000,
    require_partition_filter = TRUE)
AS (
  SELECT 
  *
FROM `bfsi-ai-data-usecase-98uh7.BITest.naexample`

);



cluster:
_______

CREATE table `bfsi-ai-data-usecase-98uh7.BITest.na-1-cluster`
( 
Country_name STRING,
Address STRING,
id INT64,
currency_code STRING
)
CLUSTER BY
    Country_name,currency_code
  AS 
  (
  SELECT
    *
  FROM
  `bfsi-ai-data-usecase-98uh7.BITest.Country` 
   );



CREATE table `bfsi-ai-data-usecase-98uh7.BITest.na-2-cluster`
( 
Country_name STRING,
Address STRING,
id INT64,
currency_code STRING
)
CLUSTER BY
    currency_code
  AS 
  (
  SELECT
    *
  FROM
  `bfsi-ai-data-usecase-98uh7.BITest.Country` 
   );




partition and cluster:
______________________
CREATE table `bfsi-ai-data-usecase-98uh7.BITest.na-partcluster`
( 
  id INT64,
  name STRING,
count INT64,
date DATE
)
PARTITION BY
    date
CLUSTER BY
   id
  AS 
  (
  SELECT
    *
  FROM
  `bfsi-ai-data-usecase-98uh7.BITest.namesss` 
  WHERE date = "2023-04-14"
   );


_____________________________________________________________
??current date in specified time zone:
select current_date('America/Los_Angeles') AS dt;
select current_date('India/Kolkata') AS d;
select current_date('Australia/Brisbane) AS dt;??
______________________________________________________________________
                           *DATE FUNCTIONS*

Date:
select current_date();   

----------------------------------------------
??syntax:
DATE(year, month, day): DATE(2019, 10, 05) AS date_ymd
DATE(timestamp_expression):DATE(DATETIME '2023-10-25 23:59:59') AS date_d
DATE(timestamp_expression, time_zone_expression):DATE(TIMESTAMP '2016-10-25 05:30:00+07', 'America/Los_Angeles') AS date_tstz

eg:
SELECT
  DATE(2019, 10, 05) AS date_ymd,
  DATE(DATETIME '2023-10-25 23:59:59') AS date_dt,
  DATE(TIMESTAMP '2016-10-25 05:30:00+07', 'America/Los_Angeles') AS date_tstz;??
____________________________________________________________________________________________________________________________
DATE_ADD:
sy:DATE_ADD(date_expression, INTERVAL int64_expression date_part)---- day,month,year

SELECT DATE_ADD(DATE '2023-09-20', INTERVAL 5 DAY) AS five_days_later;
o/p:    five_days_later	
        2023-09-25

SELECT DATE_ADD(DATE '2023-09-20', INTERVAL 2 MONTH) AS f;
o/p:    f	
        2023-11-20

SELECT DATE_ADD(DATE '2023-09-20', INTERVAL 2 YEAR) AS f;
o/p:    f	
        2025-11-20
--------------------------------------------------------------------------------------------------------
DATE_SUB
sy:DATE_SUB(date_expression, INTERVAL int64_expression date_part)

eg:SELECT DATE_SUB(DATE '2023-09-25', INTERVAL 5 DAY) AS five_days_ago;    2023-09-20

eg:SELECT DATE_SUB(DATE '2023-09-25', INTERVAL 5 WEEK) AS five_days_ago;   2023-08-21


--------------------------------------------------------------------------------------------------------
DTE_DIFF
Sy:DATE_DIFF(date_expression_a, date_expression_b, date_part)

SELECT DATE_DIFF(DATE '2023-09-07', DATE '2008-12-25', DAY) AS days_diff;    53323
SELECT DATE_DIFF(DATE '2023-09-07', DATE '2008-12-25', MONTH) AS days_diff;   177
SELECT DATE_DIFF(DATE '2023-09-07', DATE '2008-12-25', YEAR) AS days_diff;    15
SELECT DATE_DIFF(DATE '2023-09-07', DATE '2008-12-25', WEEK) AS days_diff;    767

---------------------------------------------------------------------------------------
DATE_TRUNC:always rounding to the begining:
SELECT DATE_TRUNC(DATE '2008-11-30', MONTH) AS month;   2008-11-01
SELECT DATE_TRUNC(DATE '2008-11-30', YEAR) AS month;    2008-01-01
*date will not work
_____________________________________________________________________________________________

EXTRACT(part FROM date_expression)

SELECT EXTRACT(DAY FROM DATE '2013-12-25') AS the_day;  25
SELECT EXTRACT(MONTH FROM DATE '2013-12-25') AS the_m;   12
SELECT EXTRACT(YEAR FROM DATE '2013-12-25') AS the_m;     2023

TIME:
SELECT EXTRACT(MINUTE FROM DATETIME ('2023-10-25 23:58:59')) AS minute;     58
SELECT EXTRACT(HOUR FROM DATETIME ('2023-10-25 23:58:59')) AS minute;       23
________________________________________________________________
FORMAT_DATE:
%d %B %Y -   21 February 2023     B-full month name   %A=week
%x- MM/DD/YY     

SELECT FORMAT_DATE('%x', DATE '2023-12-25') AS US_format;      12/25/23

SELECT FORMAT_DATE('%b-%d-%Y', DATE '2023-12-25') AS formatted;    Dec-25-2023

SELECT FORMAT_DATE('%b %Y', DATE '2008-12-25') AS formatted;    Dec 2008 
-----------------------------------------------------------------------------------
DATE-1 example:
create table BITest.date1
(
start_date DATE,
end_date DATE,
  id integer,

)
OPTIONS(
  
  description="MY TABLE"
);


insert into `BITest.date1` values('2023-01-01','2024-01-05',1),
('2023-01-11','2026-01-15',2),
('2023-01-21','2025-01-25',3);

-SELECT start_date,end_date, DATE_DIFF(end_date,start_date,DAY) as T from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;

-SELECT start_date,end_date, EXTRACT(DAY FROM  start_date) AS T from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;
SELECT start_date,end_date, EXTRACT(MONTH FROM  start_date) AS T from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;


-SELECT start_date,end_date,DATE_ADD(start_date, INTERVAL 10 DAY) AS T  from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;

-SELECT start_date,end_date,DATE_SUB(start_date, INTERVAL 10 DAY) AS T  from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;

-SELECT DATE_SUB(DATE '2023-09-25', INTERVAL 200 YEAR) AS five_days_ago;

-SELECT start_date,end_date,DATE_ADD(start_date, INTERVAL 100 YEAR) AS T  from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;

-SELECT start_date,end_date, FORMAT_DATE("%b-%d-%Y", start_date) AS T from `bfsi-ai-data-usecase-98uh7.BITest.date1` ORDER BY T DESC ;  Jan-21-2023


___________________________________________________________________________


from google.cloud import bigquery
client=bigquery.Client(project="qwiklabs-gcp-03-3660f9116494")
q="""
SELECT
 *
FROM
  `BITest.customer` as c
INNER JOIN
  `BITest.sales` as s
ON
  c.Cust_id=s.Cust_id;
"""
query_job=client.query(q)
res=query_job.result()
for i in res:
    print(i)


____________________________________________________________________________

DBT JOINS EXAMPLE

CREATE TABLE `bfsi-ai-data-usecase-98uh7.BITest1.USERS` (
  USER_ID INT64,
  FIRST_NAME STRING,
  LAST_NAME STRING,
  CITY STRING  
)
OPTIONS(
  
  description="MY TABLE"  
);


CREATE TABLE `bfsi-ai-data-usecase-98uh7.BITest1.ORD`(
  ORDER_ID INT64,
  USER_ID INT64,
  ORDER_DATE DATE,
  ORDER_VALUE FLOAT64
);


