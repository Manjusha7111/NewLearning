import re
import apache_beam as beam
from apache_beam.options.pipeline_options import PipelineOptions
 
class CleanData(beam.DoFn):
    def process(self, element):
        # Remove null values
        if element is not None:
            # Remove leading and trailing spaces
            cleaned_text = element.strip()
            # Remove special characters
            cleaned_text = re.sub(r'[^A-Za-z0-9\s]', '', cleaned_text)
            yield cleaned_text
 
def run_data_cleaning_pipeline(input_data, output_path):
    options = PipelineOptions()
    with beam.Pipeline(options=options) as p:
        cleaned_data = (
            p
| 'ReadInputText' >> beam.io.ReadFromText(input_data)
            | 'CleanData' >> beam.ParDo(CleanData())
| 'WriteCleanedData' >> beam.io.WriteToText(output_path)
        )
 
if __name__ == '__main__':
    input_data = 'input/input_data.txt'
    output_path = 'output/cleaned_data.txt'
    run_data_cleaning_pipeline(input_data, output_path)



input:

Hello, this is an example sentence with special characters! How are you doing?
This line contains numbers: 123 and some special characters @#$%^&*.
Another line with trailing spaces.     
Null value example.


output:

Hello this is an example sentence with special characters How are you doing
This line contains numbers 123 and some special characters 
Another line with trailing spaces
Null value example